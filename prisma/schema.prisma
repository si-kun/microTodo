generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id
  username String @unique
  email String @unique
  avatarUrl String?
  bio String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories Category[]
  todos Todo[]

  @@index([username])
  @@index([email])
  @@index([createdAt])
}

model Todo {
  id        String   @id @default(uuid())
  title     String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 期限設定
  hasDeadline Boolean   @default(false)
  startDate   DateTime?
  dueDate     DateTime?

  isPriority String @default("normal")

  //リレーション
  userId String
  user User @relation(fields: [userId], references: [id],onDelete: Cascade)

  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id],onDelete: SetNull)
  tags String[]
  checkList CheckListItem[]
  @@index([userId])

  @@index([userId, completed])
  @@index([userId, dueDate])
  @@index([userId, createdAt])
  @@index([categoryId])
  @@index([isPriority])
}

model Category {
  id String @id @default(uuid())
  name String
  color String

  //リレーション
  userId String
  user User @relation(fields: [userId], references: [id] ,onDelete: Cascade)

  todos Todo[]

  @@index([userId])
  @@unique([userId, name])
}

model CheckListItem {
  id String @id @default(uuid())
  title String
  completed Boolean @default(false)
  order Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // リレーション
  todoId String
  todo Todo @relation(fields: [todoId], references: [id], onDelete: Cascade)

  @@index([todoId])
  @@index([todoId, completed])
  @@index([todoId, order])
}
